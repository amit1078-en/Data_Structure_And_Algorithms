a policy based data structure in g++ that keeps the 
unique elements in sorted order. It performs all the 
operations as performed by the set data structure in STL
in log(n) complexity and performs two additional operations also in log(n) complexity .



HEADERFILE USED


#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;

#define ordered_set tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> 


ordered_set object



2.important funtions in ordered_set

1.find_by_order(k)

it returns the kth smallest value in the tree
*object.find_by_order(2)

2.order_of_key(k)
returns the number of items that are strictly less than our items k in 0(logn) time
object.order_of_key(2)





